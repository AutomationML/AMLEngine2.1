<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>InheritanceExtensions.ClassIsDerivedFrom&lt;T&gt;(IClassWithBaseClassReference&lt;T&gt;, IClassWithBaseClassReference&lt;T&gt;) Method</title><meta name="Title" content="ClassIsDerivedFrom&lt;T&gt;(IClassWithBaseClassReference&lt;T&gt;, IClassWithBaseClassReference&lt;T&gt;) Method" /><meta name="Microsoft.Help.Id" content="M:Aml.Engine.CAEX.Extensions.InheritanceExtensions.ClassIsDerivedFrom``1(Aml.Engine.CAEX.IClassWithBaseClassReference{``0},Aml.Engine.CAEX.IClassWithBaseClassReference{``0})" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="container" content="Aml.Engine.CAEX.Extensions" /><meta name="file" content="M_Aml_Engine_CAEX_Extensions_InheritanceExtensions_ClassIsDerivedFrom__1_1" /><meta name="guid" content="M_Aml_Engine_CAEX_Extensions_InheritanceExtensions_ClassIsDerivedFrom__1_1" /><meta name="Description" content="Determines, if the specified class is directly or indirectly (across multiple generations) a descendant of the specified base class or identical to it." /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">The AutomationML Engine<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/welcome.htm" title="The AutomationML Engine" tocid="roottoc">The AutomationML Engine</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_AMLEngineDocumentation.htm" title="The AutomationML Engine Reference Guide" tocid="R_Project_AMLEngineDocumentation">The AutomationML Engine Reference Guide</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/G_Aml_Engine_CAEX.htm" title="Aml.Engine.CAEX Namespaces" tocid="G_Aml_Engine_CAEX">Aml.Engine.CAEX Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Aml_Engine_CAEX_Extensions.htm" title="Aml.Engine.CAEX.Extensions" tocid="N_Aml_Engine_CAEX_Extensions">Aml.Engine.CAEX.Extensions</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Aml_Engine_CAEX_Extensions_InheritanceExtensions.htm" title="InheritanceExtensions Class" tocid="T_Aml_Engine_CAEX_Extensions_InheritanceExtensions">InheritanceExtensions Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Aml_Engine_CAEX_Extensions_InheritanceExtensions.htm" title="InheritanceExtensions Methods" tocid="Methods_T_Aml_Engine_CAEX_Extensions_InheritanceExtensions">InheritanceExtensions Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Aml_Engine_CAEX_Extensions_InheritanceExtensions_ClassIsDerivedFrom.htm" title="ClassIsDerivedFrom Method" tocid="Overload_Aml_Engine_CAEX_Extensions_InheritanceExtensions_ClassIsDerivedFrom">ClassIsDerivedFrom Method</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Aml_Engine_CAEX_Extensions_InheritanceExtensions_ClassIsDerivedFrom__1_1.htm" title="ClassIsDerivedFrom&lt;T&gt;(IClassWithBaseClassReference&lt;T&gt;, IClassWithBaseClassReference&lt;T&gt;) Method" tocid="M_Aml_Engine_CAEX_Extensions_InheritanceExtensions_ClassIsDerivedFrom__1_1">ClassIsDerivedFrom&lt;T&gt;(IClassWithBaseClassReference&lt;T&gt;, IClassWithBaseClassReference&lt;T&gt;) Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Aml_Engine_CAEX_Extensions_InheritanceExtensions_ClassIsDerivedFrom__1_2.htm" title="ClassIsDerivedFrom&lt;T&gt;(IClassWithBaseClassReference&lt;T&gt;, String) Method" tocid="M_Aml_Engine_CAEX_Extensions_InheritanceExtensions_ClassIsDerivedFrom__1_2">ClassIsDerivedFrom&lt;T&gt;(IClassWithBaseClassReference&lt;T&gt;, String) Method</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Aml_Engine_CAEX_Extensions_InheritanceExtensions_ClassIsDerivedFrom__1.htm" title="ClassIsDerivedFrom&lt;T&gt;(CAEXDocument, String, String) Method" tocid="M_Aml_Engine_CAEX_Extensions_InheritanceExtensions_ClassIsDerivedFrom__1">ClassIsDerivedFrom&lt;T&gt;(CAEXDocument, String, String) Method</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/logoShade.png" /></td><td class="titleColumn"><h1>Inheritance<wbr />Extensions<span id="LST82650037_0" data-languageSpecificText="cpp=::|nu=."></span>Class<wbr />Is<wbr />Derived<wbr />From<span id="LST82650037_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span><span id="LST82650037_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>(IClass<wbr />With<wbr />Base<wbr />Class<wbr />Reference<span id="LST82650037_3" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span><span id="LST82650037_4" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, IClass<wbr />With<wbr />Base<wbr />Class<wbr />Reference<span id="LST82650037_5" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">T</span><span id="LST82650037_6" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>) Method</h1></td></tr></table><div class="summary">
                Determines, if the specified class is directly or indirectly (across multiple generations)
                a descendant of the specified base class or identical to it. This method can be used, if the classes are
                distributed over different CAEX documents, the documents should be referenced by external
                references and alias references.
            </div><br /><strong>Namespace:</strong> <a href="N_Aml_Engine_CAEX_Extensions.htm">Aml.Engine.CAEX.Extensions</a><br /><strong>Assembly:</strong> Aml.Engine (in Aml.Engine.dll) Version: 3.2<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDB')" onkeypress="SectionExpandCollapse_CheckKey('IDB', event)" tabindex="0"><img id="IDBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="IDBSection" class="collapsibleSection"><div id="IDAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDAB_tab1" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cs','1','3');return false;">C#</a></div><div id="IDAB_tab2" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','vb','2','3');return false;">VB</a></div><div id="IDAB_tab3" class="codeSnippetContainerTab"><a href="#" onclick="ChangeTab('IDAB','cpp','3','3');return false;">C++</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDAB');return false;" title="Copy">Copy</a></div></div><div id="IDAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">bool</span>? <span class="identifier">ClassIsDerivedFrom</span>&lt;T&gt;(
	<span class="keyword">this</span> <span class="identifier">IClassWithBaseClassReference</span>&lt;T&gt; <span class="parameter">classWithReference</span>,
	<span class="identifier">IClassWithBaseClassReference</span>&lt;T&gt; <span class="parameter">baseClass</span>
)
<span class="keyword">where</span> T : <span class="identifier">CAEXObject</span>
</pre></div><div id="IDAB_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">ExtensionAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">ClassIsDerivedFrom</span>(<span class="keyword">Of</span> T <span class="keyword">As</span> <span class="identifier">CAEXObject</span>) ( 
	<span class="parameter">classWithReference</span> <span class="keyword">As</span> <span class="identifier">IClassWithBaseClassReference</span>(<span class="keyword">Of</span> T),
	<span class="parameter">baseClass</span> <span class="keyword">As</span> <span class="identifier">IClassWithBaseClassReference</span>(<span class="keyword">Of</span> T)
) <span class="keyword">As</span> <span class="identifier">Boolean</span>?</pre></div><div id="IDAB_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
[<span class="identifier">ExtensionAttribute</span>]
<span class="keyword">generic</span>&lt;<span class="keyword">typename</span> T&gt;
<span class="keyword">where</span> T : <span class="identifier">CAEXObject</span>
<span class="keyword">static</span> <span class="identifier">Nullable</span>&lt;<span class="identifier">bool</span>&gt; <span class="identifier">ClassIsDerivedFrom</span>(
	<span class="identifier">IClassWithBaseClassReference</span>&lt;T&gt;^ <span class="parameter">classWithReference</span>, 
	<span class="identifier">IClassWithBaseClassReference</span>&lt;T&gt;^ <span class="parameter">baseClass</span>
)</pre></div></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">classWithReference</span>  <a href="T_Aml_Engine_CAEX_IClassWithBaseClassReference_1.htm">IClassWithBaseClassReference</a><span id="LST82650037_7" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">T</span></span><span id="LST82650037_8" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>The class with reference.</dd><dt class="has-text-weight-normal"><span class="parameter">baseClass</span>  <a href="T_Aml_Engine_CAEX_IClassWithBaseClassReference_1.htm">IClassWithBaseClassReference</a><span id="LST82650037_9" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">T</span></span><span id="LST82650037_10" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>The base class.</dd></dl><h4>Type Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">T</span></dt><dd>The type of the CAEX class.</dd></dl><h4>Return Value</h4><a href="https://docs.microsoft.com/dotnet/api/system.nullable-1" target="_parent" rel="noopener noreferrer">Nullable</a><span id="LST82650037_11" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_parent" rel="noopener noreferrer">Boolean</a><span id="LST82650037_12" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><br /><span class="code">true</span> if the class is derived, <span class="code">false</span> if it is not. If no value is
                returned, some references could not be resolved to get the answer.
            <h4>Usage Note</h4>In Visual Basic and C#, you can call this method as an instance method on any object of type <a href="T_Aml_Engine_CAEX_IClassWithBaseClassReference_1.htm">IClassWithBaseClassReference</a><span id="LST82650037_13" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">T</span></span><span id="LST82650037_14" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>. When you use instance method syntax to call this method, omit the first parameter. For more information, see <a href="https://docs.microsoft.com/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods" target="_blank" rel="noopener noreferrer">Extension Methods (Visual Basic)</a> or <a href="https://docs.microsoft.com/dotnet/csharp/programming-guide/classes-and-structs/extension-methods" target="_blank" rel="noopener noreferrer">Extension Methods (C# Programming Guide)</a>.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="T_Aml_Engine_CAEX_Extensions_InheritanceExtensions.htm">InheritanceExtensions Class</a></div><div><a href="Overload_Aml_Engine_CAEX_Extensions_InheritanceExtensions_ClassIsDerivedFrom.htm">ClassIsDerivedFrom Overload</a></div><div><a href="N_Aml_Engine_CAEX_Extensions.htm">Aml.Engine.CAEX.Extensions Namespace</a></div></div></div></div><div id="PageFooter" class="pageFooter"><p><a href="https://www.automationml.org" target="_blank" rel="noopener noreferrer">Copyright © AutomationML e.V. 2017-2022</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40AutomationML.org?Subject=The%20AutomationML%20Engine">AutomationML office</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>