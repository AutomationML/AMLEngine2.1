<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>Document Validation</title><meta name="Title" content="Document Validation" /><meta name="Microsoft.Help.Id" content="validation" /><meta name="Microsoft.Help.ContentType" content="Samples" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Description" content="To validate a document, a service, which implements the T:Aml.Engine.Services.Interfaces.IValidator`1 interface has to be used. The Aml.Engine currently contains one implementation of this interface, the T:Aml.Engine.Services.ValidatorService." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">The AutomationML Engine<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/welcome.htm" title="The AutomationML Engine" tocid="roottoc">The AutomationML Engine</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/welcome.htm" title="Introduction to the AutomationML Engine" tocid="welcome">Introduction to the AutomationML Engine</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Version history.htm" title="Version History" tocid="Version history">Version History</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_AMLEngineDocumentation.htm" title="The AutomationML Engine Reference Guide" tocid="R_Project_AMLEngineDocumentation">The AutomationML Engine Reference Guide</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/basic.htm" title="Basic code examples" tocid="basic">Basic code examples</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/service.htm" title="Advanced document processing using services" tocid="service">Advanced document processing using services</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/queries.htm" title="Query Examples" tocid="queries">Query Examples</a></div><div class="toclevel1 current" data-toclevel="1"><a data-tochassubtree="false" href="../html/validation.htm" title="Document Validation" tocid="validation">Document Validation</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/adaption.htm" title="Adaption of old AMLEgine" tocid="adaption">Adaption of old AMLEgine</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/changes.htm" title="CAEX 3.0 Changes" tocid="changes">CAEX 3.0 Changes</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/logoShade.png" /></td><td class="titleColumn"><h1>Document Validation</h1></td></tr></table><div><p>This topic contains the following sections:</p><ul><li><a href="#Section1">Validating a document</a></li><li><a href="#Section2">Repair a validated document</a></li><li><a href="#Section3">Validation of Names and IDs</a></li><li><a href="#seeAlsoSection">See Also</a></li></ul><p>To validate a document, a service, which implements the <a href="T_Aml_Engine_Services_Interfaces_IValidator_1.htm">IValidator<span id="LST91377328_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>RESULTTYPE<span id="LST91377328_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> 
	  interface has to be used. The Aml.Engine currently contains one implementation of this interface, the <a href="T_Aml_Engine_Services_ValidatorService.htm">ValidatorService</a>.
	  If validation issues are detected, also possible repair options are included in the validation result. See the  <a href="T_Aml_Engine_Services_ValidationElement.htm">ValidationElement</a>
	  class, which information is included in the validation result.
	 </p></div><div class="collapsibleAreaRegion" id="Section1"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDHAB')" onkeypress="SectionExpandCollapse_CheckKey('IDHAB', event)" tabindex="0"><img id="IDHABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Validating a document</span></div><div id="IDHABSection" class="collapsibleSection"><p>
		  This example show, how a document can be validated and how the obtained result can be read using extension methods, defined in
		  <a href="T_Aml_Engine_Services_ValidationResults.htm">ValidationResults</a>.</p><div id="IDCBHAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDCBHAB_tab1" class="codeSnippetContainerTabSingle">Validate document</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDCBHAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDCBHAB');return false;" title="Copy">Copy</a></div></div><div id="IDCBHAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.Services;
<span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.CAEX;
<span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.CAEX.Extensions;
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span><span class="highlight-keyword">void</span> ValidateDocument (CAEXDocument document)
<span class="highlight-spacerShort"></span>{
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// registration of the validation service</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> service = ValidatorService.Register();
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// document validation</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> validationResult = service.ValidateAll();
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// filter results, get all ID references which are not OK.</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> idReferenceValidationResult = validationResult.IDReferenceValidationResults();
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// filter results, get all Path references which are not OK.</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> pathReferenceValidationResult = validationResult.PathReferenceValidationResults();
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    ValidatorService.UnRegister();
<span class="highlight-spacerShort"></span>}</pre></div></div></div><p><br /></p><p><a href="#Intro">Back to the Top</a></p></div><div class="collapsibleAreaRegion" id="Section2"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDIAB')" onkeypress="SectionExpandCollapse_CheckKey('IDIAB', event)" tabindex="0"><img id="IDIABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Repair a validated document</span></div><div id="IDIABSection" class="collapsibleSection"><p>This example is about repair IDs in a validated document.</p><div id="IDCBIAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDCBIAB_tab1" class="codeSnippetContainerTabSingle">Repair IDs</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDCBIAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDCBIAB');return false;" title="Copy">Copy</a></div></div><div id="IDCBIAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.Services;
<span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.CAEX;
<span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.CAEX.Extensions;
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span><span class="highlight-keyword">void</span> ValidateDocument (CAEXDocument document)
<span class="highlight-spacerShort"></span>{
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// registration of the validation service</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> service = ValidatorService.Register();
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// document validation</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> validationResult = service.ValidateAll();
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// filter results, get all IDs which are repairable.</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> idValidationResult = validationResult.IDValidationResults().Where(v =&gt; v.AvailableRepairOptions != RepairTypeEnum.None).ToList();
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    idValidationResult.ForEach((e) =&gt; service.Repair(e));
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    ValidatorService.UnRegister();
<span class="highlight-spacerShort"></span>}</pre></div></div></div><p><br /></p><p><a href="#Intro">Back to the Top</a></p></div><div class="collapsibleAreaRegion" id="Section3"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDJAB')" onkeypress="SectionExpandCollapse_CheckKey('IDJAB', event)" tabindex="0"><img id="IDJABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Validation of Names and IDs</span></div><div id="IDJABSection" class="collapsibleSection"><p>These examples explain, how to validate a single ID or Name which should be assigned to an element.</p><div id="IDCBJAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDCBJAB_tab1" class="codeSnippetContainerTabSingle">Validate a name</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDCBJAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDCBJAB');return false;" title="Copy">Copy</a></div></div><div id="IDCBJAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.Services;
<span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.CAEX;
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span><span class="highlight-keyword">void</span> ValidateName (CAEXDocument document)
<span class="highlight-spacerShort"></span>{
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// registration of the validation service</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> service = ValidatorService.Register();
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> insHierarchy1 = document.CAEXFile.InstanceHierarchy.Append();
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    insHierarchy1.Name = <span class="highlight-literal">"InsHierarchy"</span>;
<span class="highlight-spacerShort"></span>    result = _service.NameValidation(insHierarchy1, <span class="highlight-literal">"InsHierarchy"</span>);
<span class="highlight-spacerShort"></span>    Assert.IsTrue(result.IsValid);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> insHierarchy2 = document.CAEXFile.InstanceHierarchy.Append(<span class="highlight-literal">""</span>);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// it is not allowed, to assign the same name to another InstanceHierarchy</span>
<span class="highlight-spacerShort"></span>    result = _service.NameValidation(insHierarchy2, <span class="highlight-literal">"InsHierarchy"</span>);
<span class="highlight-spacerShort"></span>    Assert.IsFalse(result.IsValid);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// it is possible to register a UniqueNameService. The Aml.Engine recognizes, if such a service is present and</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// will automatically assign unique names to all generated or inserted objects.</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    Console.WriteLine (result.Message);
<span class="highlight-spacerShort"></span>}</pre></div></div></div><p><br /></p><p><a href="#Intro">Back to the Top</a></p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="M_Aml_Engine_Services_ValidatorService_NameValidation.htm">NameValidation</a></div><div><a href="T_Aml_Engine_Services_UniqueNameService.htm">UniqueNameService</a></div></div></div></div><div id="PageFooter" class="pageFooter"><p><a href="https://www.automationml.org" target="_blank" rel="noopener noreferrer">Copyright © AutomationML e.V. 2017-2022</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40AutomationML.org?Subject=The%20AutomationML%20Engine">AutomationML office</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>