<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="Microsoft.Help.SelfBranded" content="true" /><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Locale" content="en-us" /><meta name="Microsoft.Help.TopicLocale" content="en-us" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"></script><title>Query Examples</title><meta name="Title" content="Query Examples" /><meta name="Microsoft.Help.Id" content="queries" /><meta name="Microsoft.Help.ContentType" content="Samples" /><meta name="Microsoft.Help.Category" content="CSharp" /><meta name="Description" content="Queries are often applied to get specific information from an AML document which cannot be supplied by a class member or a property. The Aml.Engine supports queries with the provision of a query service interface. The Aml." /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="SetDefaultLanguage('cs');"><input type="hidden" id="userDataCache" class="userDataStyle" /><div id="PageHeader" class="pageHeader">The AutomationML Engine<form id="SearchForm" method="get" action="#" onsubmit="TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0" data-childrenloaded="true"><a class="tocExpanded" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/welcome.htm" title="The AutomationML Engine" tocid="roottoc">The AutomationML Engine</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/welcome.htm" title="Introduction to the AutomationML Engine" tocid="welcome">Introduction to the AutomationML Engine</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Version history.htm" title="Version History" tocid="Version history">Version History</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_AMLEngineDocumentation.htm" title="The AutomationML Engine Reference Guide" tocid="R_Project_AMLEngineDocumentation">The AutomationML Engine Reference Guide</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/basic.htm" title="Basic code examples" tocid="basic">Basic code examples</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/service.htm" title="Advanced document processing using services" tocid="service">Advanced document processing using services</a></div><div class="toclevel1 current" data-toclevel="1"><a data-tochassubtree="false" href="../html/queries.htm" title="Query Examples" tocid="queries">Query Examples</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/validation.htm" title="Document Validation" tocid="validation">Document Validation</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/adaption.htm" title="Adaption of old AMLEgine" tocid="adaption">Adaption of old AMLEgine</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/changes.htm" title="CAEX 3.0 Changes" tocid="changes">CAEX 3.0 Changes</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div id="TopicContent" class="topicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/logoShade.png" /></td><td class="titleColumn"><h1>Query Examples</h1></td></tr></table><div id="Intro"><p>This topic contains the following sections:</p><ul><li><a href="#Basic">Basic queries</a></li><li><a href="#ClassClass">Query class to class relations</a></li><li><a href="#ClassInstance">Query class to instance relations</a></li><li><a href="#InstanceInstance">Query instance to instance relations</a></li><li><a href="#seeAlsoSection">See Also</a></li></ul><p>
        Queries are often applied to get specific information from an AML document which cannot be
        supplied by a class member or a property. The Aml.Engine supports queries with the
        provision of a query service interface. The Aml.Engine contains two implementation of
        the query service interface <a href="T_Aml_Engine_Services_Interfaces_IQuery.htm">IQuery</a>.
        The main purpose of the Query service is it, to find related objects (Class to Class, 
        Instance to Class and Instance to Instance relations).      
      </p><p>
        The implementation <a href="T_Aml_Engine_Services_QueryService.htm">QueryService</a>
        is the registered default query service. The implementation is based on System.Xml.Linq integrated Query language.
        The second implementation <a href="T_Aml_Engine_Services_LookupService.htm">LookupService</a>
        uses lookup tables and indexed based access to query objects. This service performs faster in most queries but needs additional
        memory space and an initialization phase to build the lookup tables. The tables are automatically updated when the AML document
        is modified.
      </p><p>
			To use the default System.Xml.Linq based Query service no programing is required. To access this service,
			the property <a href="P_Aml_Engine_Services_ServiceLocator_QueryService.htm">QueryService</a>
			can be used.

			To use the table based LookupService, the registration method of the LookupService shall be called.
		</p><div id="IDEAAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDEAAB_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDEAAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDEAAB');return false;" title="Copy">Copy</a></div></div><div id="IDEAAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">var</span> service = LookupService.Register();
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span><span class="highlight-comment">// after registration, the service locator has changed the query service property</span>
<span class="highlight-spacerShort"></span>Assert.AreEqual (service, Aml.Engine.Services.ServiceLocator.QueryService);</pre></div></div></div><p>
          After registration, all queries including those which are called by the Aml.Engine will be performed
          by the LookupService.

          To switch back to the default System.Xml.Linq based Query service, the LookupService shall be unregistered.
          </p><div id="IDGAAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDGAAB_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDGAAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDGAAB');return false;" title="Copy">Copy</a></div></div><div id="IDGAAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span>LookupService.UnRegister();
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span><span class="highlight-comment">// after unregistration, the service locator has changed the query service property again</span>
<span class="highlight-spacerShort"></span>Assert.IsTrue (Aml.Engine.Services.ServiceLocator.QueryService <span class="highlight-keyword">is</span> Aml.Engine.Services.QueryService);</pre></div></div></div><p>
          After unregistration, all queries including those which are called by the Aml.Engine will be performed
          by the default System.Xml.Linq base Query service again.

          Please note, that the Service locator will always allow only a single service registered for a service interface type.
          If the LookupService should be your preferred  query service, leave it registered as long as it is used. This service needs
          to create tables to locate objects. If the service is unregistered the service and its tables are disposed. If it is
          registered again, all tables have to be rebuild.

        </p></div><div class="collapsibleAreaRegion" id="Basic"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDGAB')" onkeypress="SectionExpandCollapse_CheckKey('IDGAB', event)" tabindex="0"><img id="IDGABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Basic queries</span></div><div id="IDGABSection" class="collapsibleSection"><p>The most common queries are querying a CAEX object by an ID or a Path. </p><div id="IDDBGAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDDBGAB_tab1" class="codeSnippetContainerTabSingle">FindByID example</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDDBGAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDDBGAB');return false;" title="Copy">Copy</a></div></div><div id="IDDBGAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.Services;
<span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.CAEX.Extensions;
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>CAEXObject FindByID (CAEXDocument document, InternalElementType internalElement)
<span class="highlight-spacerShort"></span>{
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// this is a document extension method</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> caexObj_1 = document.FindByID (internalElement.ID);
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// this is the equivalent method</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> caexObj_2 = ServiceLocator.QueryService.FindByID (document, internalElement.ID);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    Assert.AreEqual (caexObj_1, caexObj_2);
<span class="highlight-spacerShort"></span>    Assert.AreEqual (caexObj_1, internalElement);
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">return</span> caexObj_1;
<span class="highlight-spacerShort"></span>}</pre></div></div></div><p><br /></p><div id="IDFBGAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDFBGAB_tab1" class="codeSnippetContainerTabSingle">FindByPath example</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDFBGAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDFBGAB');return false;" title="Copy">Copy</a></div></div><div id="IDFBGAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.Services;
<span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.CAEX.Extensions;
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span><span class="highlight-comment">// Try to find the referenced SystemUnitClass of an InternalElement.             </span>
<span class="highlight-spacerShort"></span>CAEXObject FindByPath (CAEXDocument document, InternalElementType internalElement)
<span class="highlight-spacerShort"></span>{
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// this is a document extension method</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> caexObj_1 = document.FindByPath (internalElement.RefBaseSystemUnitPath);
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// this is the equivalent method</span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> caexObj_2 = ServiceLocator.QueryService.FindByPath (document, internalElement.RefBaseSystemUnitPath);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    Assert.AreEqual (caexObj_1, caexObj_2);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-comment">// The InternalElementType contains a property which can be used to get and set the SystemUnitClass</span>
<span class="highlight-spacerShort"></span>    Assert.AreEqual (caexObj_1, internalElement.SystemUnitClass);
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">return</span> caexObj_1;
<span class="highlight-spacerShort"></span>}</pre></div></div></div><p><br /></p><p><a href="#Intro">Back to the Top</a></p></div><div class="collapsibleAreaRegion" id="ClassClass"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDHAB')" onkeypress="SectionExpandCollapse_CheckKey('IDHAB', event)" tabindex="0"><img id="IDHABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Query class to class relations</span></div><div id="IDHABSection" class="collapsibleSection"><p>Class to Class relations are inheritance relations. </p><div id="IDBBHAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDBBHAB_tab1" class="codeSnippetContainerTabSingle">First generation of derived classes</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDBBHAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDBBHAB');return false;" title="Copy">Copy</a></div></div><div id="IDBBHAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.Services;
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span><span class="highlight-comment">// get the first generation of derived role classes from the specified role class</span>
<span class="highlight-spacerShort"></span><span class="highlight-keyword">void</span> GetDerivedFirstGeneration (RoleFamilyType roleClass)
<span class="highlight-spacerShort"></span>{
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> derivedClasses = ServiceLocator.QueryService.AllClassReferences (roleClass);
<span class="highlight-spacerShort"></span>}</pre></div></div></div><p><br /></p><div id="IDDBHAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDDBHAB_tab1" class="codeSnippetContainerTabSingle">All generations of derived classes</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDDBHAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDDBHAB');return false;" title="Copy">Copy</a></div></div><div id="IDDBHAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.Services;
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span><span class="highlight-comment">// get the first and all following generations of derived role classes from the specified role class</span>
<span class="highlight-spacerShort"></span><span class="highlight-keyword">void</span> GetDerivedFirstGeneration (RoleFamilyType roleClass)
<span class="highlight-spacerShort"></span>{
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> derivedClasses = ServiceLocator.QueryService.AllClassReferencesDeep (roleClass);
<span class="highlight-spacerShort"></span>}</pre></div></div></div><p><br /></p><p><a href="#Intro">Back to the Top</a></p></div><div class="collapsibleAreaRegion" id="ClassInstance"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDIAB')" onkeypress="SectionExpandCollapse_CheckKey('IDIAB', event)" tabindex="0"><img id="IDIABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Query class to instance relations</span></div><div id="IDIABSection" class="collapsibleSection"><p>A Class to Instance relations is always defined using a class path as a value in any Attribute of a CAEX object, 
         which is not a class (InternalElement, ExternalInterface, Attribute, RoleRequirement, SupportedRoleClass). You have to 
         either provide a full CAEX path or the CAEX class object itself as a parameter of a query. </p><div id="IDBBIAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDBBIAB_tab1" class="codeSnippetContainerTabSingle">ExternalInterface Instances of an InterfaceClass</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDBBIAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDBBIAB');return false;" title="Copy">Copy</a></div></div><div id="IDBBIAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.Services;
<span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.AmlObjects;
<span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.CAEX;
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span><span class="highlight-comment">// Get all ExternalInterfaces, which are ExternalDataConnectors, including those ExternalInterfaces,</span>
<span class="highlight-spacerShort"></span><span class="highlight-comment">// which reference a derived class from an ExternalDataConnector.</span>
<span class="highlight-spacerShort"></span><span class="highlight-comment">// This method is appropriate, to get a collection of external sources.</span>
<span class="highlight-spacerShort"></span><span class="highlight-keyword">void</span> GetAllExternalDataConnectorInstances (CAEXDocument document)
<span class="highlight-spacerShort"></span>{                  
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">var</span> externalInterfaces = ServiceLocator.QueryService.AllClassReferencesDeep(document, 
<span class="highlight-spacerShort"></span>                   AutomationMLInterfaceClassLib.ExternalDataConnector, CAEX_CLASSModel_TagNames.EXTERNAL_INTERFACE);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> externalInterface <span class="highlight-keyword">in</span> externalInterfaces)
<span class="highlight-spacerShort"></span>    {
<span class="highlight-spacerShort"></span>         <span class="highlight-keyword">var</span> refUriAttribute = ((ObjectWithAMLAttribute)externalInterface).RefURIAttribute;
<span class="highlight-spacerShort"></span>         <span class="highlight-keyword">if</span> (refUriAttribute != <span class="highlight-keyword">null</span>)
<span class="highlight-spacerShort"></span>         {
<span class="highlight-spacerShort"></span>             Console.WriteLine (refUriAttribute.Value);
<span class="highlight-spacerShort"></span>         }
<span class="highlight-spacerShort"></span>    }
<span class="highlight-spacerShort"></span>}</pre></div></div></div><p><br /></p><p><a href="#Intro">Back to the Top</a></p></div><div class="collapsibleAreaRegion" id="InstanceInstance"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('IDJAB')" onkeypress="SectionExpandCollapse_CheckKey('IDJAB', event)" tabindex="0"><img id="IDJABToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Query instance to instance relations</span></div><div id="IDJABSection" class="collapsibleSection"><p>
          An Instance to Instance relation is always defined using an InternalLink. The Query Interface contains special queries to explore Instance to Instance Relations.
        </p><div id="IDBBJAB" class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="IDBBJAB_tab1" class="codeSnippetContainerTabSingle">InternalLinks connected to an ExternalInterface</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="IDBBJAB_copyCode" href="#" class="copyCodeSnippet" onclick="CopyToClipboard('IDBBJAB');return false;" title="Copy">Copy</a></div></div><div id="IDBBJAB_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.Services;
<span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.AmlObjects;
<span class="highlight-spacerShort"></span><span class="highlight-keyword">using</span> Aml.Engine.CAEX;
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span><span class="highlight-comment">// Get all InternalLinks, which are attached to an ExternalInterface. </span>
<span class="highlight-spacerShort"></span><span class="highlight-comment">// This method is appropriate, to get a collection of related ExternalInterfaces.</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>IEnumerable&lt;ExternalInterfaceType&gt; GetAllRelatedExternalInterfaces(ExternalInterfaceType externalInterface)
<span class="highlight-spacerShort"></span>{
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">var</span> internalLinks = ServiceLocator.QueryService.InternalLinksToInterface(externalInterface);
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  <span class="highlight-comment">// or use the equivalent extension method externalInterface.InternalLinksToInterface();</span>
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> internalLink <span class="highlight-keyword">in</span> internalLinks)
<span class="highlight-spacerShort"></span>  {
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">if</span> (internalLink.AInterface.Equals(externalInterface)
<span class="highlight-spacerShort"></span>      <span class="highlight-keyword">yield</span> <span class="highlight-keyword">return</span> internalLink.BInterface;
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">else</span>
<span class="highlight-spacerShort"></span>      <span class="highlight-keyword">yield</span> <span class="highlight-keyword">return</span> internalLink.AInterface;
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>}</pre></div></div></div><p><br /></p><p><a href="#Intro">Back to the Top</a></p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('seeAlso')" onkeypress="SectionExpandCollapse_CheckKey('seeAlso', event)" tabindex="0"><img id="seeAlsoToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="seeAlsoSection" class="collapsibleSection"><h4>Reference</h4><div><a href="M_Aml_Engine_Services_Interfaces_IQuery_FindByID.htm">FindByID</a></div><div><a href="M_Aml_Engine_CAEX_Extensions_CAEXDocumentExtensions_FindByID.htm">FindByID</a></div><div><a href="M_Aml_Engine_CAEX_Extensions_CAEXDocumentExtensions_FindByPath.htm">FindByPath</a></div><div><a href="M_Aml_Engine_Services_Interfaces_IQuery_FindByPath.htm">FindByPath</a></div><div><a href="Overload_Aml_Engine_Services_Interfaces_IQuery_AllClassReferences.htm">AllClassReferences</a></div><div><a href="Overload_Aml_Engine_Services_Interfaces_IQuery_AllClassReferencesDeep.htm">AllClassReferencesDeep</a></div><div><a href="F_Aml_Engine_AmlObjects_AutomationMLInterfaceClassLib_ExternalDataConnector.htm">ExternalDataConnector</a></div><div><a href="M_Aml_Engine_Services_QueryResult_InternalLinksToInterface.htm">InternalLinksToInterface</a></div><div><a href="M_Aml_Engine_Services_Interfaces_IQuery_InternalLinksToInterface.htm">InternalLinksToInterface</a></div></div></div></div><div id="PageFooter" class="pageFooter"><p><a href="https://www.automationml.org" target="_blank" rel="noopener noreferrer">Copyright © AutomationML e.V. 2017-2022</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:office%40AutomationML.org?Subject=The%20AutomationML%20Engine">AutomationML office</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script></div></body></html>